apiVersion: apps/v1
kind: Deployment
metadata:
  name: PLACEHOLDER_FOR_NAME
  namespace: PLACEHOLDER_FOR_NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app: PLACEHOLDER_FOR_NAME
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: PLACEHOLDER_FOR_NAME
      annotations:
        redeploy-hash: PLACEHOLDER_FOR_IMAGE_HASH
    spec:
      containers:
      - name: streamlit
        image: PLACEHOLDER_FOR_IMAGE
        imagePullPolicy: Always
        env:
          - name: API_URL
            value: "http://PLACEHOLDER_FOR_API.PLACEHOLDER_FOR_NAMESPACE.svc.cluster.local"
          - name: PADDLE_OCR_TOKEN
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: PADDLE_OCR_TOKEN
          - name: OCR_URL
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: PADDLE_OCR_URL
          - name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: OPENAI_API_KEY
          - name: OPENAI_API_BASE
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: OPENAI_API_BASE
        ports:
        - containerPort: 8080
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: registry-secret
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: PLACEHOLDER_FOR_NAME
  namespace: PLACEHOLDER_FOR_NAMESPACE
spec:
  selector:
    app: PLACEHOLDER_FOR_NAME
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: PLACEHOLDER_FOR_NAME
  namespace: PLACEHOLDER_FOR_NAMESPACE
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
spec:
  ingressClassName: public
  rules:
  - host: PLACEHOLDER_FOR_URL
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: PLACEHOLDER_FOR_NAME
            port:
              number: 80
  tls:
  - hosts:
    - PLACEHOLDER_FOR_URL
    secretName: PLACEHOLDER_FOR_URL-tls
